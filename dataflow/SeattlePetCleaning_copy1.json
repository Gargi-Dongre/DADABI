{
	"name": "SeattlePetCleaning_copy1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Parquet1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "selectColumns"
				}
			],
			"scriptLines": [
				"parameters{",
				"     JobID as string (\"10\")",
				"}",
				"source(output(",
				"          License_Issue_Date as string,",
				"          License_Number as string,",
				"          Animals_Name as string,",
				"          Species as string,",
				"          Primary_Breed as string,",
				"          Secondary_Breed as string,",
				"          ZIP_Code as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(LIC_ISSUE_DATE = toDate(License_Issue_Date, 'MMMM dd yyyy'),",
				"          Secondary_Breed = iifNull(Secondary_Breed,'Unknown'),",
				"          Animals_Name = translate(Animals_Name, '() []', ''),",
				"          License_Number = toInteger(translate(License_Number, 'S', '')),",
				"          DI_JOB_ID = $JobID,",
				"          Load_Dt = currentDate()) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          LICENSE_NUMBER = License_Number,",
				"          ANIMAL_NAME = Animals_Name,",
				"          SPECIES = Species,",
				"          PRIMARY_BREED = Primary_Breed,",
				"          SECONDARY_BREED = Secondary_Breed,",
				"          ZIP_CODE = ZIP_Code,",
				"          LICENSE_ISSUE_DATE = LIC_ISSUE_DATE,",
				"          DI_JOB_ID,",
				"          DI_LOAD_DT = Load_Dt",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> selectColumns",
				"selectColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     mapColumn(",
				"          LICENSE_NUMBER,",
				"          ANIMAL_NAME,",
				"          SPECIES,",
				"          PRIMARY_BREED,",
				"          SECONDARY_BREED,",
				"          ZIP_CODE,",
				"          LICENSE_ISSUE_DATE,",
				"          DI_JOB_ID,",
				"          DI_LOAD_DT",
				"     )) ~> sink1"
			]
		}
	}
}