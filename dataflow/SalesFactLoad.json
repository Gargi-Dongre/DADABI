{
	"name": "SalesFactLoad",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Snowflake_DS2",
						"type": "DatasetReference"
					},
					"name": "sourceSFstage"
				},
				{
					"dataset": {
						"referenceName": "Snowflake_DS2",
						"type": "DatasetReference"
					},
					"name": "sourceDim"
				},
				{
					"dataset": {
						"referenceName": "Snowflake_DS2",
						"type": "DatasetReference"
					},
					"name": "sourceParked"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "union"
				},
				{
					"name": "derivedColumn"
				}
			],
			"scriptLines": [
				"source(output(",
				"          INVOICEID as decimal(38,0),",
				"          CUSTOMERID as decimal(38,0),",
				"          INVOICEDATE as date,",
				"          SHIPTO as string,",
				"          SHIPTO_CITY as string,",
				"          SHIPTO_COUNTRY as string,",
				"          SALESPERSONPERSONID as decimal(38,0),",
				"          SALESPERSONNAME as string,",
				"          TOTAL_PRODUCT_CNT as decimal(38,0),",
				"          TOTAL as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceSFstage",
				"source(output(",
				"          CUSTOMER_SK as decimal(38,0),",
				"          CUSTOMER_ID as decimal(38,0),",
				"          CUSTOMER_NAME as string,",
				"          DI_CREATEDDT as timestamp,",
				"          PID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceDim",
				"source(output(",
				"          INVOICEID as decimal(38,0),",
				"          CUSTOMERID as decimal(38,0),",
				"          INVOICEDATE as date,",
				"          SHIPTO as string,",
				"          SHIPTO_CITY as string,",
				"          SHIPTO_COUNTRY as string,",
				"          SALESPERSONPERSONID as decimal(38,0),",
				"          SALESPERSONNAME as string,",
				"          TOTAL_PRODUCT_CNT as decimal(38,0),",
				"          TOTAL as double,",
				"          RETRY_FLAG as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceParked",
				"derivedColumn, sourceParked union(byName: true)~> union",
				"sourceSFstage derive(retry_flag = \"NEW\") ~> derivedColumn"
			]
		}
	}
}