{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "sourceStage"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "sourceBreedDim"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "sourceLocationDim"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "sourceDateDim"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "joinStageBreedDim"
				},
				{
					"name": "joinLocDim"
				},
				{
					"name": "joinDateDim"
				}
			],
			"scriptLines": [
				"source(output(",
				"          LICENSE_ISSUE_DATE as date,",
				"          LICENSE_NUMBER as string,",
				"          ANIMAL_NAME as string,",
				"          SPECIES as string,",
				"          PRIMARY_BREED as string,",
				"          SECONDARY_BREED as string,",
				"          ZIP_CODE as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceStage",
				"source(output(",
				"          BREED_SK as decimal(10,0),",
				"          PRIMARY_BREED as string,",
				"          SECONDARY_BREED as string,",
				"          SPECIES_NAME as string,",
				"          DI_JOB_ID as string,",
				"          DI_JOB_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceBreedDim",
				"source(output(",
				"          LOCATION_SK as decimal(10,0),",
				"          ZIP as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          DI_JOB_ID as string,",
				"          DI_JOB_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceLocationDim",
				"source(output(",
				"          DT as date,",
				"          ABRV_DAY_NAME as string,",
				"          MONTH_NAME as string,",
				"          START_DAY_OF_MONTH as date,",
				"          END_DAY_OF_MONTH as date,",
				"          QUATER_NUM as decimal(2,0),",
				"          DAY_OF_WEEK as decimal(2,0),",
				"          IS_WEEKEND as decimal(1,0),",
				"          YEAR_NUM as decimal(4,0),",
				"          MONTH_NUM as decimal(2,0),",
				"          DAY_NUM as decimal(2,0),",
				"          DATE_DIM_SK as decimal(10,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceDateDim",
				"sourceStage, sourceBreedDim join(SPECIES == SPECIES_NAME",
				"     && sourceStage@PRIMARY_BREED == sourceBreedDim@PRIMARY_BREED",
				"     && sourceStage@SECONDARY_BREED == sourceBreedDim@SECONDARY_BREED,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinStageBreedDim",
				"joinStageBreedDim, sourceLocationDim join(ZIP_CODE == ZIP,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinLocDim",
				"joinLocDim, sourceDateDim join(LICENSE_ISSUE_DATE == ERROR_FUNCTION(''),",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinDateDim"
			]
		}
	}
}